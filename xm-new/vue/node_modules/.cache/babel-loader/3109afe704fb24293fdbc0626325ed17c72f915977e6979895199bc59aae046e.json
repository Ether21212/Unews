{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Register\",\n  data() {\n    // 验证码校验\n    const validatePassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else if (value.length < 5 || value.length > 16) {\n        callback(new Error('密码长度必须在5到16位之间'));\n      } else {\n        if (this.form.confirmPass !== '') {\n          this.$refs.formRef.validateField('confirmPass');\n        }\n        callback();\n      }\n    };\n    const validateConfirmPass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请确认密码'));\n      } else if (value !== this.form.password) {\n        callback(new Error('两次输入的密码不一致'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      form: {\n        username: '',\n        password: '',\n        confirmPass: '',\n        role: 'USER'\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          validator: validatePassword,\n          trigger: 'blur'\n        }],\n        confirmPass: [{\n          required: true,\n          message: '请确认密码',\n          trigger: 'blur'\n        }, {\n          validator: validateConfirmPass,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {},\n  methods: {\n    register() {\n      this.$refs['formRef'].validate(valid => {\n        if (valid) {\n          // 验证通过\n          this.$request.post('/register', this.form).then(res => {\n            if (res.code === '200') {\n              this.$router.push('/login');\n              this.$message.success('注册成功');\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","validatePassword","rule","value","callback","Error","length","form","confirmPass","$refs","formRef","validateField","validateConfirmPass","password","username","role","rules","required","message","trigger","validator","created","methods","register","validate","valid","$request","post","then","res","code","$router","push","$message","success","error","msg"],"sources":["src/views/Register.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"left\">\r\n      <div class=\"loginWord\">\r\n        Unews 新闻网\r\n      </div>\r\n      <img src=\"@/assets/imgs/logo.png\" style=\" width: 200px;  height: 200px;  object-fit: contain; margin-top: 40px;margin-left: 55px\" >\r\n    </div>\r\n    <div class=\"right\">\r\n      <div style=\"text-align: center; font-size: 20px; margin-bottom: 40px; color: #333\">欢迎注册</div>\r\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item prop=\"username\">\r\n          <el-input size=\"medium\" prefix-icon=\"el-icon-user\" placeholder=\"请输入账号\" v-model=\"form.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input size=\"medium\" prefix-icon=\"el-icon-lock\" placeholder=\"请输入密码\" show-password  v-model=\"form.password\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"confirmPass\">\r\n          <el-input size=\"medium\" prefix-icon=\"el-icon-lock\" placeholder=\"请确认密码\" show-password  v-model=\"form.confirmPass\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button size=\"medium\" style=\"width: 100%; background-color: #2a60c9; border-color: #2a60c9; color: white\" @click=\"register\">注 册</el-button>\r\n        </el-form-item>\r\n        <div style=\"text-align: right\">\r\n          已有账号？去 <a href=\"/login\">登录</a>\r\n        </div>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Register\",\r\n  data() {\r\n    // 验证码校验\r\n    const validatePassword = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入密码'))\r\n      } else if (value.length < 5 || value.length > 16) {\r\n        callback(new Error('密码长度必须在5到16位之间'));\r\n      } else {\r\n        if (this.form.confirmPass !== '') {\r\n          this.$refs.formRef.validateField('confirmPass');\r\n        }\r\n        callback();\r\n      }\r\n    };\r\n\r\n    const validateConfirmPass = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请确认密码'));\r\n      } else if (value !== this.form.password) {\r\n        callback(new Error('两次输入的密码不一致'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n\r\n    return {\r\n      form: { username: '', password: '', confirmPass: '', role: 'USER' },\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '请输入账号', trigger: 'blur' },\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n          { validator: validatePassword, trigger: 'blur' }\r\n        ],\r\n        confirmPass: [\r\n          { required: true, message: '请确认密码', trigger: 'blur' },\r\n          { validator: validateConfirmPass, trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n\r\n  },\r\n  methods: {\r\n    register() {\r\n      this.$refs['formRef'].validate((valid) => {\r\n        if (valid) {\r\n          // 验证通过\r\n          this.$request.post('/register', this.form).then(res => {\r\n            if (res.code === '200') {\r\n              this.$router.push('/login')\r\n              this.$message.success('注册成功')\r\n            } else {\r\n              this.$message.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background-color: #f8f8f8;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #666;\r\n}\r\na {\r\n  color: #2a60c9;\r\n}\r\n.left{\r\n  width: 380px;\r\n  padding: 40px;\r\n  background-color: #417dff;\r\n  border-radius: 5px;\r\n  height: 500px;\r\n  box-shadow: 0 14px 28px rgba(0,0,0,0.25),0 10px 10px rgba(0,0,0,0.22);\r\n}\r\n.right{\r\n  width: 380px;\r\n  padding: 40px;\r\n  background-color: rgba(255, 255, 255, .8);\r\n  height: 500px;\r\n  border-radius: 5px;\r\n  box-shadow: 0 14px 28px rgba(0,0,0,0.25),0 10px 10px rgba(0,0,0,0.22);\r\n}\r\n.loginWord{\r\n  text-align: center;\r\n  font-size: 35px;\r\n  color: #f8f8f8;\r\n  margin-top: 60px;\r\n}\r\n</style>"],"mappings":";AAgCA;EACAA,IAAA;EACAC,KAAA;IACA;IACA,MAAAC,gBAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,CAAAG,MAAA,QAAAH,KAAA,CAAAG,MAAA;QACAF,QAAA,KAAAC,KAAA;MACA;QACA,SAAAE,IAAA,CAAAC,WAAA;UACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,aAAA;QACA;QACAP,QAAA;MACA;IACA;IAEA,MAAAQ,mBAAA,GAAAA,CAAAV,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,UAAAI,IAAA,CAAAM,QAAA;QACAT,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IAEA;MACAG,IAAA;QAAAO,QAAA;QAAAD,QAAA;QAAAL,WAAA;QAAAO,IAAA;MAAA;MACAC,KAAA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAN,QAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,SAAA,EAAAnB,gBAAA;UAAAkB,OAAA;QAAA,EACA;QACAX,WAAA,GACA;UAAAS,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,SAAA,EAAAR,mBAAA;UAAAO,OAAA;QAAA;MAEA;IACA;EACA;EACAE,QAAA,GAEA;EACAC,OAAA;IACAC,SAAA;MACA,KAAAd,KAAA,YAAAe,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA;UACA,KAAAC,QAAA,CAAAC,IAAA,mBAAApB,IAAA,EAAAqB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,KAAAC,OAAA,CAAAC,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;YACA;cACA,KAAAD,QAAA,CAAAE,KAAA,CAAAN,GAAA,CAAAO,GAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}